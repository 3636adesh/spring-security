#server:
#  port: 8080
#
#spring:
#  output:
#    ansi:
#      enabled: ALWAYS
#  security:
#    oauth2:
#      authorizationserver:
#        client:
#          demo-client:
#            require-authorization-consent: true
#            registration:
#              client-id: demo
#              client-secret: "{noop}secret"
#              authorization-grant-types:
#                - client_credentials
#                - authorization_code
#                - refresh_token
#              redirect-uris:
#                - http://127.0.0.1:8082/login/oauth2/code/reg-client
#                - http://localhost:8082/login/oauth2/code/reg-client
#              scopes:
#                - user.read
#                - user.write
#                - openid
#              client-authentication-methods:
#                - client_secret_basic
#
#
#logging:
#  level:
#    org.springframework.security: trace


spring.application.name=auth-server


spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=client
spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={bcrypt}$2a$10$KRWE2vUoBQ9oCen6EWRFYeGdFbgoBH2vnUaEIuFZ/W6XPjWXkcDuS
spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials,authorization_code,refresh_token
spring.security.oauth2.authorizationserver.client.client-1.registration.redirect-uris=http://127.0.0.1:8082/login/oauth2/code/spring,http://localhost:8082/login/oauth2/code/spring

spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write,openid
spring.security.oauth2.authorizationserver.client.client-1.require-authorization-consent=true
logging.level.org.springframework.security=trace



logging.level.org.springframework.web=DEBUG